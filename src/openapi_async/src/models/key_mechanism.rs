/*
 * NetHSM
 *
 * All endpoints expect exactly the specified JSON. Additional properties will cause a Bad Request Error (400). All HTTP errors contain a JSON structure with an explanation of type string. All <a href=\"https://tools.ietf.org/html/rfc4648#section-4\">base64</a> encoded values are Big Endian.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum KeyMechanism {
    #[serde(rename = "RSA_Decryption_RAW")]
    RSADecryptionRAW,
    #[serde(rename = "RSA_Decryption_PKCS1")]
    RSADecryptionPKCS1,
    #[serde(rename = "RSA_Decryption_OAEP_MD5")]
    RSADecryptionOAEPMD5,
    #[serde(rename = "RSA_Decryption_OAEP_SHA1")]
    RSADecryptionOAEPSHA1,
    #[serde(rename = "RSA_Decryption_OAEP_SHA224")]
    RSADecryptionOAEPSHA224,
    #[serde(rename = "RSA_Decryption_OAEP_SHA256")]
    RSADecryptionOAEPSHA256,
    #[serde(rename = "RSA_Decryption_OAEP_SHA384")]
    RSADecryptionOAEPSHA384,
    #[serde(rename = "RSA_Decryption_OAEP_SHA512")]
    RSADecryptionOAEPSHA512,
    #[serde(rename = "RSA_Signature_PKCS1")]
    RSASignaturePKCS1,
    #[serde(rename = "RSA_Signature_PSS_MD5")]
    RSASignaturePSSMD5,
    #[serde(rename = "RSA_Signature_PSS_SHA1")]
    RSASignaturePSSSHA1,
    #[serde(rename = "RSA_Signature_PSS_SHA224")]
    RSASignaturePSSSHA224,
    #[serde(rename = "RSA_Signature_PSS_SHA256")]
    RSASignaturePSSSHA256,
    #[serde(rename = "RSA_Signature_PSS_SHA384")]
    RSASignaturePSSSHA384,
    #[serde(rename = "RSA_Signature_PSS_SHA512")]
    RSASignaturePSSSHA512,
    #[serde(rename = "EdDSA_Signature")]
    EdDSASignature,
    #[serde(rename = "ECDSA_Signature")]
    ECDSASignature,
    #[serde(rename = "AES_Encryption_CBC")]
    AESEncryptionCBC,
    #[serde(rename = "AES_Decryption_CBC")]
    AESDecryptionCBC,

}

impl ToString for KeyMechanism {
    fn to_string(&self) -> String {
        match self {
            Self::RSADecryptionRAW => String::from("RSA_Decryption_RAW"),
            Self::RSADecryptionPKCS1 => String::from("RSA_Decryption_PKCS1"),
            Self::RSADecryptionOAEPMD5 => String::from("RSA_Decryption_OAEP_MD5"),
            Self::RSADecryptionOAEPSHA1 => String::from("RSA_Decryption_OAEP_SHA1"),
            Self::RSADecryptionOAEPSHA224 => String::from("RSA_Decryption_OAEP_SHA224"),
            Self::RSADecryptionOAEPSHA256 => String::from("RSA_Decryption_OAEP_SHA256"),
            Self::RSADecryptionOAEPSHA384 => String::from("RSA_Decryption_OAEP_SHA384"),
            Self::RSADecryptionOAEPSHA512 => String::from("RSA_Decryption_OAEP_SHA512"),
            Self::RSASignaturePKCS1 => String::from("RSA_Signature_PKCS1"),
            Self::RSASignaturePSSMD5 => String::from("RSA_Signature_PSS_MD5"),
            Self::RSASignaturePSSSHA1 => String::from("RSA_Signature_PSS_SHA1"),
            Self::RSASignaturePSSSHA224 => String::from("RSA_Signature_PSS_SHA224"),
            Self::RSASignaturePSSSHA256 => String::from("RSA_Signature_PSS_SHA256"),
            Self::RSASignaturePSSSHA384 => String::from("RSA_Signature_PSS_SHA384"),
            Self::RSASignaturePSSSHA512 => String::from("RSA_Signature_PSS_SHA512"),
            Self::EdDSASignature => String::from("EdDSA_Signature"),
            Self::ECDSASignature => String::from("ECDSA_Signature"),
            Self::AESEncryptionCBC => String::from("AES_Encryption_CBC"),
            Self::AESDecryptionCBC => String::from("AES_Decryption_CBC"),
        }
    }
}

impl Default for KeyMechanism {
    fn default() -> KeyMechanism {
        Self::RSADecryptionRAW
    }
}




